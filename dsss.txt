Dsss

clc;
close all;
clear all;
b=round(rand(1,20));
pattern=[];
for k=1:20
 if b(1,k)==0
 sig=zeros(1,6);
 else
 sig=ones(1,6);
 end
 pattern=[pattern sig];
end
subplot(3,1,1);
plot(pattern);
axis([-1 130 -.5 1.5]);
title('\bf\it Original Bit Sequence');
% Generating the pseudo random bit pattern for spreading
spread_sig=round(rand(1,120));
subplot(3,1,2);
plot(spread_sig);
axis([-1 130 -.5 1.5]);
title('\bf\it Pseudorandom Bit Sequence');
% XORing the pattern with the spread signal
hopped_sig=xor(pattern,spread_sig);
% Modulating the hopped signal
dsss_sig=[];
t=[0:100];
fc=50
c1=cos(2*pi*fc*t);
c2=cos(2*pi*fc*t+pi);
for k=1:120
 if hopped_sig(1,k)==0
 dsss_sig=[dsss_sig c1];
 else
 dsss_sig=[dsss_sig c2];
 end
end
subplot(3,1,3);
plot([1:12120],dsss_sig);
axis([-1 12220 -1.5 1.5]);
title('\bf\it DSSS Signal');